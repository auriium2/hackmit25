{"ast":null,"code":"var _jsxFileName = \"/Users/arjuncaputo/hackmit25/frontend/src/components/Graph/GraphVisualization.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphVisualization = ({\n  nodes,\n  edges,\n  onNodeSelect,\n  onNodeHover\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const [tooltip, setTooltip] = useState(null);\n\n  // Colors for different clusters/topics\n  const clusterColors = {\n    \"NLP\": \"#4A90E2\",\n    \"Computer Vision\": \"#7CB342\",\n    \"Machine Learning\": \"#FB8C00\",\n    \"Default\": \"#666666\"\n  };\n  const getNodeColor = cluster => {\n    return cluster ? clusterColors[cluster] || clusterColors[\"Default\"] : clusterColors[\"Default\"];\n  };\n  useEffect(() => {\n    if (!svgRef.current || nodes.length === 0) return;\n\n    // Clear previous visualization\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n    const svg = d3.select(svgRef.current);\n    const container = svgRef.current.parentElement;\n    const width = (container === null || container === void 0 ? void 0 : container.clientWidth) || 800;\n    const height = (container === null || container === void 0 ? void 0 : container.clientHeight) || 600;\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // Create zoom behavior\n    const zoom = d3.zoom().scaleExtent([0.1, 4]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    });\n    svg.call(zoom);\n\n    // Create main group for all elements\n    const g = svg.append(\"g\");\n\n    // Prepare data\n    const d3Nodes = nodes.map(node => ({\n      id: node.id,\n      title: node.data.title,\n      year: node.data.year,\n      cluster: node.data.cluster,\n      confidence: node.data.confidence\n    }));\n    const d3Links = edges.map(edge => ({\n      id: edge.id,\n      source: edge.source,\n      target: edge.target,\n      type: edge.type\n    }));\n\n    // Create force simulation\n    const simulation = d3.forceSimulation(d3Nodes).force(\"link\", d3.forceLink(d3Links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-300)).force(\"center\", d3.forceCenter(width / 2, height / 2)).force(\"collision\", d3.forceCollide().radius(30));\n\n    // Create links (edges)\n    const link = g.append(\"g\").selectAll(\"line\").data(d3Links).enter().append(\"line\").attr(\"stroke\", d => d.type === \"beats\" ? \"#E74C3C\" : \"#888\").attr(\"stroke-width\", d => d.type === \"beats\" ? 3 : 2).attr(\"stroke-dasharray\", d => d.type === \"beats\" ? \"5,5\" : \"none\").attr(\"marker-end\", \"url(#arrowhead)\");\n\n    // Create arrowhead marker\n    svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 20).attr(\"refY\", 0).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", \"#888\");\n\n    // Create nodes\n    const node = g.append(\"g\").selectAll(\"circle\").data(d3Nodes).enter().append(\"circle\").attr(\"r\", 25).attr(\"fill\", d => getNodeColor(d.cluster)).attr(\"stroke\", \"#fff\").attr(\"stroke-width\", 2).style(\"cursor\", \"pointer\");\n\n    // Add labels to nodes\n    const labels = g.append(\"g\").selectAll(\"text\").data(d3Nodes).enter().append(\"text\").text(d => d.year.toString()).attr(\"font-size\", \"12px\").attr(\"font-weight\", \"600\").attr(\"fill\", \"white\").attr(\"text-anchor\", \"middle\").attr(\"dominant-baseline\", \"middle\").style(\"pointer-events\", \"none\");\n\n    // Add drag behavior\n    const drag = d3.drag().on(\"start\", (event, d) => {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }).on(\"drag\", (event, d) => {\n      d.fx = event.x;\n      d.fy = event.y;\n    }).on(\"end\", (event, d) => {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    });\n    node.call(drag);\n\n    // Mouse events\n    node.on(\"click\", (event, d) => {\n      onNodeSelect(d.id);\n    }).on(\"mouseover\", (event, d) => {\n      const [x, y] = d3.pointer(event, svg.node());\n      setTooltip({\n        show: true,\n        x: x,\n        y: y,\n        data: {\n          title: d.title,\n          year: d.year,\n          confidence: d.confidence\n        }\n      });\n      onNodeHover(d.id);\n    }).on(\"mouseout\", () => {\n      setTooltip(null);\n      onNodeHover(null);\n    });\n\n    // Update positions on simulation tick\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => d.source.x || 0).attr(\"y1\", d => d.source.y || 0).attr(\"x2\", d => d.target.x || 0).attr(\"y2\", d => d.target.y || 0);\n      node.attr(\"cx\", d => d.x || 0).attr(\"cy\", d => d.y || 0);\n      labels.attr(\"x\", d => d.x || 0).attr(\"y\", d => d.y || 0);\n    });\n\n    // Cleanup\n    return () => {\n      simulation.stop();\n    };\n  }, [nodes, edges, onNodeSelect, onNodeHover]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        border: \"1px solid #e0e0e0\",\n        borderRadius: \"12px\",\n        backgroundColor: \"#fafafa\",\n        cursor: \"grab\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), tooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        left: tooltip.x + 20,\n        top: tooltip.y - 10,\n        background: \"rgba(0, 0, 0, 0.9)\",\n        color: \"white\",\n        padding: \"8px 12px\",\n        borderRadius: \"6px\",\n        fontSize: \"12px\",\n        maxWidth: \"250px\",\n        zIndex: 1000,\n        pointerEvents: \"none\",\n        boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.3)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: \"600\",\n          marginBottom: \"4px\"\n        },\n        children: tooltip.data.title.length > 40 ? tooltip.data.title.substring(0, 40) + \"...\" : tooltip.data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"2px\"\n        },\n        children: [\"Year: \", tooltip.data.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), tooltip.data.confidence && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Confidence: \", tooltip.data.confidence, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphVisualization, \"+IkkCyC7HNkjufWSEUWvvxFj0Es=\");\n_c = GraphVisualization;\nexport default GraphVisualization;\nvar _c;\n$RefreshReg$(_c, \"GraphVisualization\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","GraphVisualization","nodes","edges","onNodeSelect","onNodeHover","_s","svgRef","tooltip","setTooltip","clusterColors","getNodeColor","cluster","current","length","select","selectAll","remove","svg","container","parentElement","width","clientWidth","height","clientHeight","attr","zoom","scaleExtent","on","event","g","transform","call","append","d3Nodes","map","node","id","title","data","year","confidence","d3Links","edge","source","target","type","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","forceCollide","radius","link","enter","style","labels","text","toString","drag","active","alphaTarget","restart","fx","x","fy","y","pointer","show","stop","position","children","ref","border","borderRadius","backgroundColor","cursor","fileName","_jsxFileName","lineNumber","columnNumber","left","top","background","color","padding","fontSize","maxWidth","zIndex","pointerEvents","boxShadow","fontWeight","marginBottom","substring","_c","$RefreshReg$"],"sources":["/Users/arjuncaputo/hackmit25/frontend/src/components/Graph/GraphVisualization.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport { GraphNode, GraphEdge } from \"../../types\";\n\ninterface GraphVisualizationProps {\n  nodes: GraphNode[];\n  edges: GraphEdge[];\n  onNodeSelect: (nodeId: string) => void;\n  onNodeHover: (nodeId: string | null) => void;\n}\n\ninterface D3Node extends d3.SimulationNodeDatum {\n  id: string;\n  title: string;\n  year: number;\n  cluster?: string;\n  confidence?: number;\n}\n\ninterface D3Link extends d3.SimulationLinkDatum<D3Node> {\n  id: string;\n  type: string;\n  source: string | D3Node;\n  target: string | D3Node;\n}\n\nconst GraphVisualization: React.FC<GraphVisualizationProps> = ({\n  nodes,\n  edges,\n  onNodeSelect,\n  onNodeHover,\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const [tooltip, setTooltip] = useState<{\n    show: boolean;\n    x: number;\n    y: number;\n    data: {\n      title: string;\n      year: number;\n      confidence?: number;\n    };\n  } | null>(null);\n\n  // Colors for different clusters/topics\n  const clusterColors: Record<string, string> = {\n    \"NLP\": \"#4A90E2\",\n    \"Computer Vision\": \"#7CB342\",\n    \"Machine Learning\": \"#FB8C00\",\n    \"Default\": \"#666666\",\n  };\n\n  const getNodeColor = (cluster?: string) => {\n    return cluster ? clusterColors[cluster] || clusterColors[\"Default\"] : clusterColors[\"Default\"];\n  };\n\n  useEffect(() => {\n    if (!svgRef.current || nodes.length === 0) return;\n\n    // Clear previous visualization\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    const svg = d3.select(svgRef.current);\n    const container = svgRef.current.parentElement;\n    const width = container?.clientWidth || 800;\n    const height = container?.clientHeight || 600;\n\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // Create zoom behavior\n    const zoom = d3.zoom<SVGSVGElement, unknown>()\n      .scaleExtent([0.1, 4])\n      .on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      });\n\n    svg.call(zoom);\n\n    // Create main group for all elements\n    const g = svg.append(\"g\");\n\n    // Prepare data\n    const d3Nodes: D3Node[] = nodes.map(node => ({\n      id: node.id,\n      title: node.data.title,\n      year: node.data.year,\n      cluster: node.data.cluster,\n      confidence: node.data.confidence,\n    }));\n\n    const d3Links: D3Link[] = edges.map(edge => ({\n      id: edge.id,\n      source: edge.source,\n      target: edge.target,\n      type: edge.type,\n    }));\n\n    // Create force simulation\n    const simulation = d3.forceSimulation<D3Node>(d3Nodes)\n      .force(\"link\", d3.forceLink<D3Node, D3Link>(d3Links).id(d => d.id).distance(100))\n      .force(\"charge\", d3.forceManyBody().strength(-300))\n      .force(\"center\", d3.forceCenter(width / 2, height / 2))\n      .force(\"collision\", d3.forceCollide().radius(30));\n\n    // Create links (edges)\n    const link = g.append(\"g\")\n      .selectAll(\"line\")\n      .data(d3Links)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke\", (d) => d.type === \"beats\" ? \"#E74C3C\" : \"#888\")\n      .attr(\"stroke-width\", (d) => d.type === \"beats\" ? 3 : 2)\n      .attr(\"stroke-dasharray\", (d) => d.type === \"beats\" ? \"5,5\" : \"none\")\n      .attr(\"marker-end\", \"url(#arrowhead)\");\n\n    // Create arrowhead marker\n    svg.append(\"defs\").append(\"marker\")\n      .attr(\"id\", \"arrowhead\")\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 20)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\")\n      .attr(\"fill\", \"#888\");\n\n    // Create nodes\n    const node = g.append(\"g\")\n      .selectAll(\"circle\")\n      .data(d3Nodes)\n      .enter()\n      .append(\"circle\")\n      .attr(\"r\", 25)\n      .attr(\"fill\", (d) => getNodeColor(d.cluster))\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 2)\n      .style(\"cursor\", \"pointer\");\n\n    // Add labels to nodes\n    const labels = g.append(\"g\")\n      .selectAll(\"text\")\n      .data(d3Nodes)\n      .enter()\n      .append(\"text\")\n      .text((d) => d.year.toString())\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"600\")\n      .attr(\"fill\", \"white\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"dominant-baseline\", \"middle\")\n      .style(\"pointer-events\", \"none\");\n\n    // Add drag behavior\n    const drag = d3.drag<SVGCircleElement, D3Node>()\n      .on(\"start\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        d.fx = d.x;\n        d.fy = d.y;\n      })\n      .on(\"drag\", (event, d) => {\n        d.fx = event.x;\n        d.fy = event.y;\n      })\n      .on(\"end\", (event, d) => {\n        if (!event.active) simulation.alphaTarget(0);\n        d.fx = null;\n        d.fy = null;\n      });\n\n    node.call(drag);\n\n    // Mouse events\n    node\n      .on(\"click\", (event, d) => {\n        onNodeSelect(d.id);\n      })\n      .on(\"mouseover\", (event, d) => {\n        const [x, y] = d3.pointer(event, svg.node());\n        \n        setTooltip({\n          show: true,\n          x: x,\n          y: y,\n          data: {\n            title: d.title,\n            year: d.year,\n            confidence: d.confidence,\n          },\n        });\n        \n        onNodeHover(d.id);\n      })\n      .on(\"mouseout\", () => {\n        setTooltip(null);\n        onNodeHover(null);\n      });\n\n    // Update positions on simulation tick\n    simulation.on(\"tick\", () => {\n      link\n        .attr(\"x1\", (d) => (d.source as D3Node).x || 0)\n        .attr(\"y1\", (d) => (d.source as D3Node).y || 0)\n        .attr(\"x2\", (d) => (d.target as D3Node).x || 0)\n        .attr(\"y2\", (d) => (d.target as D3Node).y || 0);\n\n      node\n        .attr(\"cx\", (d) => d.x || 0)\n        .attr(\"cy\", (d) => d.y || 0);\n\n      labels\n        .attr(\"x\", (d) => d.x || 0)\n        .attr(\"y\", (d) => d.y || 0);\n    });\n\n    // Cleanup\n    return () => {\n      simulation.stop();\n    };\n  }, [nodes, edges, onNodeSelect, onNodeHover]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"100%\" }}>\n      {/* SVG Graph */}\n      <svg\n        ref={svgRef}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          border: \"1px solid #e0e0e0\",\n          borderRadius: \"12px\",\n          backgroundColor: \"#fafafa\",\n          cursor: \"grab\",\n        }}\n      />\n      \n      {/* Tooltip */}\n      {tooltip && (\n        <div\n          style={{\n            position: \"absolute\",\n            left: tooltip.x + 20,\n            top: tooltip.y - 10,\n            background: \"rgba(0, 0, 0, 0.9)\",\n            color: \"white\",\n            padding: \"8px 12px\",\n            borderRadius: \"6px\",\n            fontSize: \"12px\",\n            maxWidth: \"250px\",\n            zIndex: 1000,\n            pointerEvents: \"none\",\n            boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.3)\",\n          }}\n        >\n          <div style={{ fontWeight: \"600\", marginBottom: \"4px\" }}>\n            {tooltip.data.title.length > 40 \n              ? tooltip.data.title.substring(0, 40) + \"...\" \n              : tooltip.data.title}\n          </div>\n          <div style={{ marginBottom: \"2px\" }}>\n            Year: {tooltip.data.year}\n          </div>\n          {tooltip.data.confidence && (\n            <div>\n              Confidence: {tooltip.data.confidence}%\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GraphVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}