{"ast":null,"code":"var _jsxFileName = \"/Users/arjuncaputo/hackmit25/frontend/src/pages/GraphPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport GraphVisualization from \"../components/Graph/GraphVisualization\";\nimport FilterPanel from \"../components/Filters/FilterPanel\";\nimport PaperDetails from \"../components/PaperDetails/PaperDetails\";\nimport PaperComparison from \"../components/PaperComparison/PaperComparison\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Mock data for development\nconst mockPapers = [{\n  id: \"1\",\n  title: \"Attention Is All You Need\",\n  authors: [\"Vaswani et al.\"],\n  year: 2017,\n  abstract: \"The dominant sequence transduction models are based on complex recurrent or convolutional neural networks...\",\n  venue: \"NIPS\",\n  arxivId: \"1706.03762\",\n  citations: [\"2\", \"3\"],\n  beatsRelations: [],\n  cluster: \"NLP\",\n  confidence: 95,\n  summary: \"Introduced the Transformer architecture, revolutionizing NLP.\",\n  metrics: {\n    \"BLEU\": 28.4,\n    \"Perplexity\": 4.2\n  }\n}, {\n  id: \"2\",\n  title: \"BERT: Pre-training of Deep Bidirectional Transformers\",\n  authors: [\"Devlin et al.\"],\n  year: 2018,\n  abstract: \"We introduce a new language representation model called BERT...\",\n  venue: \"NAACL\",\n  citations: [\"3\"],\n  beatsRelations: [{\n    targetPaperId: \"1\",\n    metric: \"GLUE Score\",\n    confidence: 85,\n    description: \"Outperforms on most GLUE tasks\"\n  }],\n  cluster: \"NLP\",\n  confidence: 92,\n  summary: \"Bidirectional training of transformers for language understanding.\"\n}, {\n  id: \"3\",\n  title: \"GPT-3: Language Models are Few-Shot Learners\",\n  authors: [\"Brown et al.\"],\n  year: 2020,\n  abstract: \"Recent work has demonstrated substantial gains on many NLP tasks...\",\n  venue: \"NeurIPS\",\n  citations: [],\n  beatsRelations: [{\n    targetPaperId: \"1\",\n    metric: \"Few-shot Performance\",\n    confidence: 88,\n    description: \"Superior few-shot capabilities\"\n  }, {\n    targetPaperId: \"2\",\n    metric: \"Zero-shot Performance\",\n    confidence: 79,\n    description: \"Better zero-shot performance on many tasks\"\n  }],\n  cluster: \"NLP\",\n  confidence: 89,\n  summary: \"Large-scale language model demonstrating emergent few-shot learning abilities.\"\n}];\nconst GraphPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [filters, setFilters] = useState({\n    yearRange: [2015, 2024],\n    minConfidence: 0,\n    clusters: [],\n    searchQuery: \"\",\n    showCitations: true,\n    showBeatsRelations: true\n  });\n  const [graphState, setGraphState] = useState({\n    nodes: [],\n    edges: [],\n    selectedNode: null,\n    hoveredNode: null\n  });\n  const [comparison, setComparison] = useState({\n    paper1: null,\n    paper2: null,\n    isVisible: false\n  });\n\n  // Filter papers based on current filters\n  const filteredPapers = useMemo(() => {\n    return mockPapers.filter(paper => {\n      // Year filter\n      if (paper.year < filters.yearRange[0] || paper.year > filters.yearRange[1]) {\n        return false;\n      }\n\n      // Confidence filter\n      if (paper.confidence < filters.minConfidence) {\n        return false;\n      }\n\n      // Cluster filter\n      if (filters.clusters.length > 0 && !filters.clusters.includes(paper.cluster || \"\")) {\n        return false;\n      }\n\n      // Search query filter\n      if (filters.searchQuery && !paper.title.toLowerCase().includes(filters.searchQuery.toLowerCase()) && !paper.authors.some(author => author.toLowerCase().includes(filters.searchQuery.toLowerCase()))) {\n        return false;\n      }\n      return true;\n    });\n  }, [filters]);\n\n  // Generate graph data from filtered papers\n  const {\n    nodes,\n    edges\n  } = useMemo(() => {\n    const nodes = filteredPapers.map(paper => ({\n      id: paper.id,\n      label: paper.title.substring(0, 50) + \"...\",\n      data: paper\n    }));\n    const edges = [];\n    filteredPapers.forEach(paper => {\n      // Citation edges\n      if (filters.showCitations) {\n        paper.citations.forEach(citationId => {\n          if (filteredPapers.find(p => p.id === citationId)) {\n            edges.push({\n              id: `citation-${paper.id}-${citationId}`,\n              source: citationId,\n              target: paper.id,\n              type: \"citation\",\n              data: {}\n            });\n          }\n        });\n      }\n\n      // Beats relation edges\n      if (filters.showBeatsRelations) {\n        paper.beatsRelations.forEach(relation => {\n          if (filteredPapers.find(p => p.id === relation.targetPaperId)) {\n            edges.push({\n              id: `beats-${paper.id}-${relation.targetPaperId}`,\n              source: paper.id,\n              target: relation.targetPaperId,\n              type: \"beats\",\n              data: {\n                confidence: relation.confidence,\n                metric: relation.metric,\n                description: relation.description\n              }\n            });\n          }\n        });\n      }\n    });\n    return {\n      nodes,\n      edges\n    };\n  }, [filteredPapers, filters.showCitations, filters.showBeatsRelations]);\n\n  // Update graph state when nodes/edges change\n  React.useEffect(() => {\n    setGraphState(prev => ({\n      ...prev,\n      nodes,\n      edges\n    }));\n  }, [nodes, edges]);\n  const handleNodeSelect = useCallback(nodeId => {\n    setGraphState(prev => ({\n      ...prev,\n      selectedNode: nodeId\n    }));\n  }, []);\n  const handleNodeHover = useCallback(nodeId => {\n    setGraphState(prev => ({\n      ...prev,\n      hoveredNode: nodeId\n    }));\n  }, []);\n  const selectedPaper = graphState.selectedNode ? mockPapers.find(p => p.id === graphState.selectedNode) || null : null;\n  const handleCompare = paper => {\n    if (!comparison.paper1) {\n      setComparison(prev => ({\n        ...prev,\n        paper1: paper\n      }));\n    } else if (!comparison.paper2) {\n      setComparison(prev => ({\n        ...prev,\n        paper2: paper,\n        isVisible: true\n      }));\n    } else {\n      setComparison({\n        paper1: paper,\n        paper2: null,\n        isVisible: false\n      });\n    }\n  };\n  const availableClusters = Array.from(new Set(mockPapers.map(p => p.cluster).filter(Boolean)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      fontFamily: \"Arial, sans-serif\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        minWidth: \"300px\",\n        maxWidth: \"300px\",\n        borderRight: \"1px solid #ddd\",\n        overflow: \"auto\",\n        flexShrink: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(FilterPanel, {\n        filters: filters,\n        onFiltersChange: setFilters,\n        availableClusters: availableClusters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        minWidth: 0,\n        display: \"flex\",\n        flexDirection: \"column\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\",\n          borderBottom: \"1px solid #ddd\",\n          flexShrink: 0,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              margin: 0,\n              fontSize: \"24px\",\n              color: \"#333\"\n            },\n            children: \"RefGraph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: \"5px 0 0 0\",\n              color: \"#666\"\n            },\n            children: [\"Research Paper Visualization Tool - Showing \", filteredPapers.length, \" papers\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/\"),\n          style: {\n            padding: \"10px 20px\",\n            backgroundColor: \"#f5f5f5\",\n            border: \"1px solid #ddd\",\n            borderRadius: \"6px\",\n            cursor: \"pointer\",\n            fontSize: \"14px\",\n            color: \"#333\"\n          },\n          children: \"\\u2190 Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: \"20px\",\n          overflow: \"hidden\",\n          minHeight: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(GraphVisualization, {\n          nodes: nodes,\n          edges: edges,\n          onNodeSelect: handleNodeSelect,\n          onNodeHover: handleNodeHover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        minWidth: \"400px\",\n        maxWidth: \"400px\",\n        borderLeft: \"1px solid #ddd\",\n        overflow: \"auto\",\n        flexShrink: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(PaperDetails, {\n          paper: selectedPaper,\n          onCompare: handleCompare\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), comparison.paper1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\",\n            padding: \"15px\",\n            backgroundColor: \"#e3f2fd\",\n            borderRadius: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: \"0 0 10px 0\"\n            },\n            children: \"Comparison Queue:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"14px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Paper 1:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), \" \", comparison.paper1.title.substring(0, 40), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), comparison.paper2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"14px\",\n              marginTop: \"5px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Paper 2:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), \" \", comparison.paper2.title.substring(0, 40), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setComparison({\n              paper1: null,\n              paper2: null,\n              isVisible: false\n            }),\n            style: {\n              marginTop: \"10px\",\n              padding: \"5px 10px\",\n              fontSize: \"12px\",\n              backgroundColor: \"#f44336\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"4px\",\n              cursor: \"pointer\"\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaperComparison, {\n      paper1: comparison.paper1,\n      paper2: comparison.paper2,\n      isVisible: comparison.isVisible,\n      onClose: () => setComparison(prev => ({\n        ...prev,\n        isVisible: false\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphPage, \"ip4GxG3OJkGdmThFSAqgZjdFtss=\", false, function () {\n  return [useNavigate];\n});\n_c = GraphPage;\nexport default GraphPage;\nvar _c;\n$RefreshReg$(_c, \"GraphPage\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","useNavigate","GraphVisualization","FilterPanel","PaperDetails","PaperComparison","jsxDEV","_jsxDEV","mockPapers","id","title","authors","year","abstract","venue","arxivId","citations","beatsRelations","cluster","confidence","summary","metrics","targetPaperId","metric","description","GraphPage","_s","navigate","filters","setFilters","yearRange","minConfidence","clusters","searchQuery","showCitations","showBeatsRelations","graphState","setGraphState","nodes","edges","selectedNode","hoveredNode","comparison","setComparison","paper1","paper2","isVisible","filteredPapers","filter","paper","length","includes","toLowerCase","some","author","map","label","substring","data","forEach","citationId","find","p","push","source","target","type","relation","useEffect","prev","handleNodeSelect","nodeId","handleNodeHover","selectedPaper","handleCompare","availableClusters","Array","from","Set","Boolean","style","display","height","fontFamily","overflow","children","width","minWidth","maxWidth","borderRight","flexShrink","onFiltersChange","fileName","_jsxFileName","lineNumber","columnNumber","flex","flexDirection","padding","borderBottom","justifyContent","alignItems","margin","fontSize","color","onClick","backgroundColor","border","borderRadius","cursor","minHeight","onNodeSelect","onNodeHover","borderLeft","onCompare","marginTop","onClose","_c","$RefreshReg$"],"sources":["/Users/arjuncaputo/hackmit25/frontend/src/pages/GraphPage.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport GraphVisualization from \"../components/Graph/GraphVisualization\";\nimport FilterPanel from \"../components/Filters/FilterPanel\";\nimport PaperDetails from \"../components/PaperDetails/PaperDetails\";\nimport PaperComparison from \"../components/PaperComparison/PaperComparison\";\nimport { \n  Paper, \n  GraphNode, \n  GraphEdge, \n  FilterState, \n  ComparisonState,\n  GraphState \n} from \"../types\";\n\n// Mock data for development\nconst mockPapers: Paper[] = [\n  {\n    id: \"1\",\n    title: \"Attention Is All You Need\",\n    authors: [\"Vaswani et al.\"],\n    year: 2017,\n    abstract: \"The dominant sequence transduction models are based on complex recurrent or convolutional neural networks...\",\n    venue: \"NIPS\",\n    arxivId: \"1706.03762\",\n    citations: [\"2\", \"3\"],\n    beatsRelations: [],\n    cluster: \"NLP\",\n    confidence: 95,\n    summary: \"Introduced the Transformer architecture, revolutionizing NLP.\",\n    metrics: { \"BLEU\": 28.4, \"Perplexity\": 4.2 }\n  },\n  {\n    id: \"2\", \n    title: \"BERT: Pre-training of Deep Bidirectional Transformers\",\n    authors: [\"Devlin et al.\"],\n    year: 2018,\n    abstract: \"We introduce a new language representation model called BERT...\",\n    venue: \"NAACL\",\n    citations: [\"3\"],\n    beatsRelations: [{ targetPaperId: \"1\", metric: \"GLUE Score\", confidence: 85, description: \"Outperforms on most GLUE tasks\" }],\n    cluster: \"NLP\",\n    confidence: 92,\n    summary: \"Bidirectional training of transformers for language understanding.\",\n  },\n  {\n    id: \"3\",\n    title: \"GPT-3: Language Models are Few-Shot Learners\",\n    authors: [\"Brown et al.\"],\n    year: 2020,\n    abstract: \"Recent work has demonstrated substantial gains on many NLP tasks...\",\n    venue: \"NeurIPS\",\n    citations: [],\n    beatsRelations: [\n      { targetPaperId: \"1\", metric: \"Few-shot Performance\", confidence: 88, description: \"Superior few-shot capabilities\" },\n      { targetPaperId: \"2\", metric: \"Zero-shot Performance\", confidence: 79, description: \"Better zero-shot performance on many tasks\" }\n    ],\n    cluster: \"NLP\",\n    confidence: 89,\n    summary: \"Large-scale language model demonstrating emergent few-shot learning abilities.\",\n  }\n];\n\nconst GraphPage: React.FC = () => {\n  const navigate = useNavigate();\n  \n  const [filters, setFilters] = useState<FilterState>({\n    yearRange: [2015, 2024],\n    minConfidence: 0,\n    clusters: [],\n    searchQuery: \"\",\n    showCitations: true,\n    showBeatsRelations: true,\n  });\n\n  const [graphState, setGraphState] = useState<GraphState>({\n    nodes: [],\n    edges: [],\n    selectedNode: null,\n    hoveredNode: null,\n  });\n\n  const [comparison, setComparison] = useState<ComparisonState>({\n    paper1: null,\n    paper2: null,\n    isVisible: false,\n  });\n\n  // Filter papers based on current filters\n  const filteredPapers = useMemo(() => {\n    return mockPapers.filter(paper => {\n      // Year filter\n      if (paper.year < filters.yearRange[0] || paper.year > filters.yearRange[1]) {\n        return false;\n      }\n      \n      // Confidence filter\n      if (paper.confidence < filters.minConfidence) {\n        return false;\n      }\n      \n      // Cluster filter\n      if (filters.clusters.length > 0 && !filters.clusters.includes(paper.cluster || \"\")) {\n        return false;\n      }\n      \n      // Search query filter\n      if (filters.searchQuery && !paper.title.toLowerCase().includes(filters.searchQuery.toLowerCase()) &&\n          !paper.authors.some(author => author.toLowerCase().includes(filters.searchQuery.toLowerCase()))) {\n        return false;\n      }\n      \n      return true;\n    });\n  }, [filters]);\n\n  // Generate graph data from filtered papers\n  const { nodes, edges } = useMemo(() => {\n    const nodes: GraphNode[] = filteredPapers.map(paper => ({\n      id: paper.id,\n      label: paper.title.substring(0, 50) + \"...\",\n      data: paper,\n    }));\n\n    const edges: GraphEdge[] = [];\n    \n    filteredPapers.forEach(paper => {\n      // Citation edges\n      if (filters.showCitations) {\n        paper.citations.forEach(citationId => {\n          if (filteredPapers.find(p => p.id === citationId)) {\n            edges.push({\n              id: `citation-${paper.id}-${citationId}`,\n              source: citationId,\n              target: paper.id,\n              type: \"citation\",\n              data: {},\n            });\n          }\n        });\n      }\n      \n      // Beats relation edges\n      if (filters.showBeatsRelations) {\n        paper.beatsRelations.forEach(relation => {\n          if (filteredPapers.find(p => p.id === relation.targetPaperId)) {\n            edges.push({\n              id: `beats-${paper.id}-${relation.targetPaperId}`,\n              source: paper.id,\n              target: relation.targetPaperId,\n              type: \"beats\",\n              data: {\n                confidence: relation.confidence,\n                metric: relation.metric,\n                description: relation.description,\n              },\n            });\n          }\n        });\n      }\n    });\n\n    return { nodes, edges };\n  }, [filteredPapers, filters.showCitations, filters.showBeatsRelations]);\n\n  // Update graph state when nodes/edges change\n  React.useEffect(() => {\n    setGraphState(prev => ({ ...prev, nodes, edges }));\n  }, [nodes, edges]);\n\n  const handleNodeSelect = useCallback((nodeId: string) => {\n    setGraphState(prev => ({ ...prev, selectedNode: nodeId }));\n  }, []);\n\n  const handleNodeHover = useCallback((nodeId: string | null) => {\n    setGraphState(prev => ({ ...prev, hoveredNode: nodeId }));\n  }, []);\n\n  const selectedPaper = graphState.selectedNode \n    ? mockPapers.find(p => p.id === graphState.selectedNode) || null\n    : null;\n\n  const handleCompare = (paper: Paper) => {\n    if (!comparison.paper1) {\n      setComparison(prev => ({ ...prev, paper1: paper }));\n    } else if (!comparison.paper2) {\n      setComparison(prev => ({ ...prev, paper2: paper, isVisible: true }));\n    } else {\n      setComparison({ paper1: paper, paper2: null, isVisible: false });\n    }\n  };\n\n  const availableClusters = Array.from(new Set(mockPapers.map(p => p.cluster).filter(Boolean))) as string[];\n\n  return (\n    <div style={{ \n      display: \"flex\", \n      height: \"100vh\", \n      fontFamily: \"Arial, sans-serif\",\n      overflow: \"hidden\"\n    }}>\n      {/* Left sidebar - Filters */}\n      <div style={{ \n        width: \"300px\", \n        minWidth: \"300px\",\n        maxWidth: \"300px\",\n        borderRight: \"1px solid #ddd\", \n        overflow: \"auto\",\n        flexShrink: 0\n      }}>\n        <FilterPanel\n          filters={filters}\n          onFiltersChange={setFilters}\n          availableClusters={availableClusters}\n        />\n      </div>\n\n      {/* Main content - Graph */}\n      <div style={{ \n        flex: 1,\n        minWidth: 0,\n        display: \"flex\", \n        flexDirection: \"column\",\n        overflow: \"hidden\"\n      }}>\n        <div style={{ \n          padding: \"20px\", \n          borderBottom: \"1px solid #ddd\",\n          flexShrink: 0,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}>\n          <div>\n            <h1 style={{ margin: 0, fontSize: \"24px\", color: \"#333\" }}>RefGraph</h1>\n            <p style={{ margin: \"5px 0 0 0\", color: \"#666\" }}>\n              Research Paper Visualization Tool - Showing {filteredPapers.length} papers\n            </p>\n          </div>\n          <button\n            onClick={() => navigate(\"/\")}\n            style={{\n              padding: \"10px 20px\",\n              backgroundColor: \"#f5f5f5\",\n              border: \"1px solid #ddd\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n              fontSize: \"14px\",\n              color: \"#333\",\n            }}\n          >\n            ← Back to Home\n          </button>\n        </div>\n        \n        <div style={{ \n          flex: 1, \n          padding: \"20px\",\n          overflow: \"hidden\",\n          minHeight: 0\n        }}>\n          <GraphVisualization\n            nodes={nodes}\n            edges={edges}\n            onNodeSelect={handleNodeSelect}\n            onNodeHover={handleNodeHover}\n          />\n        </div>\n      </div>\n\n      {/* Right sidebar - Paper details */}\n      <div style={{ \n        width: \"400px\", \n        minWidth: \"400px\",\n        maxWidth: \"400px\",\n        borderLeft: \"1px solid #ddd\", \n        overflow: \"auto\",\n        flexShrink: 0\n      }}>\n        <div style={{ padding: \"20px\" }}>\n          <PaperDetails paper={selectedPaper} onCompare={handleCompare} />\n          \n          {comparison.paper1 && (\n            <div style={{ marginTop: \"20px\", padding: \"15px\", backgroundColor: \"#e3f2fd\", borderRadius: \"8px\" }}>\n              <h4 style={{ margin: \"0 0 10px 0\" }}>Comparison Queue:</h4>\n              <div style={{ fontSize: \"14px\" }}>\n                <strong>Paper 1:</strong> {comparison.paper1.title.substring(0, 40)}...\n              </div>\n              {comparison.paper2 && (\n                <div style={{ fontSize: \"14px\", marginTop: \"5px\" }}>\n                  <strong>Paper 2:</strong> {comparison.paper2.title.substring(0, 40)}...\n                </div>\n              )}\n              <button\n                onClick={() => setComparison({ paper1: null, paper2: null, isVisible: false })}\n                style={{\n                  marginTop: \"10px\",\n                  padding: \"5px 10px\",\n                  fontSize: \"12px\",\n                  backgroundColor: \"#f44336\",\n                  color: \"white\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Clear\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Comparison Modal */}\n      <PaperComparison\n        paper1={comparison.paper1}\n        paper2={comparison.paper2}\n        isVisible={comparison.isVisible}\n        onClose={() => setComparison(prev => ({ ...prev, isVisible: false }))}\n      />\n    </div>\n  );\n};\n\nexport default GraphPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}