{"ast":null,"code":"import _objectSpread from\"/Users/arjuncaputo/hackmit25/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useCallback,useMemo}from\"react\";import{useNavigate}from\"react-router-dom\";import GraphVisualization from\"../components/Graph/GraphVisualization\";import FilterPanel from\"../components/Filters/FilterPanel\";import PaperDetails from\"../components/PaperDetails/PaperDetails\";import PaperComparison from\"../components/PaperComparison/PaperComparison\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Mock data for development\nconst mockPapers=[{id:\"1\",title:\"Attention Is All You Need\",authors:[\"Vaswani et al.\"],year:2017,abstract:\"The dominant sequence transduction models are based on complex recurrent or convolutional neural networks...\",venue:\"NIPS\",arxivId:\"1706.03762\",citations:[\"2\",\"3\"],beatsRelations:[],cluster:\"NLP\",confidence:95,summary:\"Introduced the Transformer architecture, revolutionizing NLP.\",metrics:{\"BLEU\":28.4,\"Perplexity\":4.2}},{id:\"2\",title:\"BERT: Pre-training of Deep Bidirectional Transformers\",authors:[\"Devlin et al.\"],year:2018,abstract:\"We introduce a new language representation model called BERT...\",venue:\"NAACL\",citations:[\"3\"],beatsRelations:[{targetPaperId:\"1\",metric:\"GLUE Score\",confidence:85,description:\"Outperforms on most GLUE tasks\"}],cluster:\"NLP\",confidence:92,summary:\"Bidirectional training of transformers for language understanding.\"},{id:\"3\",title:\"GPT-3: Language Models are Few-Shot Learners\",authors:[\"Brown et al.\"],year:2020,abstract:\"Recent work has demonstrated substantial gains on many NLP tasks...\",venue:\"NeurIPS\",citations:[],beatsRelations:[{targetPaperId:\"1\",metric:\"Few-shot Performance\",confidence:88,description:\"Superior few-shot capabilities\"},{targetPaperId:\"2\",metric:\"Zero-shot Performance\",confidence:79,description:\"Better zero-shot performance on many tasks\"}],cluster:\"NLP\",confidence:89,summary:\"Large-scale language model demonstrating emergent few-shot learning abilities.\"}];const GraphPage=()=>{const navigate=useNavigate();const[filters,setFilters]=useState({yearRange:[2015,2024],minConfidence:0,clusters:[],searchQuery:\"\",showCitations:true,showBeatsRelations:true});const[graphState,setGraphState]=useState({nodes:[],edges:[],selectedNode:null,hoveredNode:null});const[comparison,setComparison]=useState({paper1:null,paper2:null,isVisible:false});// Filter papers based on current filters\nconst filteredPapers=useMemo(()=>{return mockPapers.filter(paper=>{// Year filter\nif(paper.year<filters.yearRange[0]||paper.year>filters.yearRange[1]){return false;}// Confidence filter\nif(paper.confidence<filters.minConfidence){return false;}// Cluster filter\nif(filters.clusters.length>0&&!filters.clusters.includes(paper.cluster||\"\")){return false;}// Search query filter\nif(filters.searchQuery&&!paper.title.toLowerCase().includes(filters.searchQuery.toLowerCase())&&!paper.authors.some(author=>author.toLowerCase().includes(filters.searchQuery.toLowerCase()))){return false;}return true;});},[filters]);// Generate graph data from filtered papers\nconst{nodes,edges}=useMemo(()=>{const nodes=filteredPapers.map(paper=>({id:paper.id,label:paper.title.substring(0,50)+\"...\",data:paper}));const edges=[];filteredPapers.forEach(paper=>{// Citation edges\nif(filters.showCitations){paper.citations.forEach(citationId=>{if(filteredPapers.find(p=>p.id===citationId)){edges.push({id:\"citation-\".concat(paper.id,\"-\").concat(citationId),source:citationId,target:paper.id,type:\"citation\",data:{}});}});}// Beats relation edges\nif(filters.showBeatsRelations){paper.beatsRelations.forEach(relation=>{if(filteredPapers.find(p=>p.id===relation.targetPaperId)){edges.push({id:\"beats-\".concat(paper.id,\"-\").concat(relation.targetPaperId),source:paper.id,target:relation.targetPaperId,type:\"beats\",data:{confidence:relation.confidence,metric:relation.metric,description:relation.description}});}});}});return{nodes,edges};},[filteredPapers,filters.showCitations,filters.showBeatsRelations]);// Update graph state when nodes/edges change\nReact.useEffect(()=>{setGraphState(prev=>_objectSpread(_objectSpread({},prev),{},{nodes,edges}));},[nodes,edges]);const handleNodeSelect=useCallback(nodeId=>{setGraphState(prev=>_objectSpread(_objectSpread({},prev),{},{selectedNode:nodeId}));},[]);const handleNodeHover=useCallback(nodeId=>{setGraphState(prev=>_objectSpread(_objectSpread({},prev),{},{hoveredNode:nodeId}));},[]);const selectedPaper=graphState.selectedNode?mockPapers.find(p=>p.id===graphState.selectedNode)||null:null;const handleCompare=paper=>{if(!comparison.paper1){setComparison(prev=>_objectSpread(_objectSpread({},prev),{},{paper1:paper}));}else if(!comparison.paper2){setComparison(prev=>_objectSpread(_objectSpread({},prev),{},{paper2:paper,isVisible:true}));}else{setComparison({paper1:paper,paper2:null,isVisible:false});}};const availableClusters=Array.from(new Set(mockPapers.map(p=>p.cluster).filter(Boolean)));return/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",height:\"100vh\",fontFamily:\"Arial, sans-serif\",overflow:\"hidden\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"300px\",minWidth:\"300px\",maxWidth:\"300px\",borderRight:\"1px solid #ddd\",overflow:\"auto\",flexShrink:0},children:/*#__PURE__*/_jsx(FilterPanel,{filters:filters,onFiltersChange:setFilters,availableClusters:availableClusters})}),/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,minWidth:0,display:\"flex\",flexDirection:\"column\",overflow:\"hidden\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\",borderBottom:\"1px solid #ddd\",flexShrink:0,display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{style:{margin:0,fontSize:\"24px\",color:\"#333\"},children:\"RefGraph\"}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:\"5px 0 0 0\",color:\"#666\"},children:[\"Research Paper Visualization Tool - Showing \",filteredPapers.length,\" papers\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),style:{padding:\"10px 20px\",backgroundColor:\"#f5f5f5\",border:\"1px solid #ddd\",borderRadius:\"6px\",cursor:\"pointer\",fontSize:\"14px\",color:\"#333\"},children:\"\\u2190 Back to Home\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1,padding:\"20px\",overflow:\"hidden\",minHeight:0},children:/*#__PURE__*/_jsx(GraphVisualization,{nodes:nodes,edges:edges,onNodeSelect:handleNodeSelect,onNodeHover:handleNodeHover})})]}),/*#__PURE__*/_jsx(\"div\",{style:{width:\"400px\",minWidth:\"400px\",maxWidth:\"400px\",borderLeft:\"1px solid #ddd\",overflow:\"auto\",flexShrink:0},children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"20px\"},children:[/*#__PURE__*/_jsx(PaperDetails,{paper:selectedPaper,onCompare:handleCompare}),comparison.paper1&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"20px\",padding:\"15px\",backgroundColor:\"#e3f2fd\",borderRadius:\"8px\"},children:[/*#__PURE__*/_jsx(\"h4\",{style:{margin:\"0 0 10px 0\"},children:\"Comparison Queue:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"14px\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Paper 1:\"}),\" \",comparison.paper1.title.substring(0,40),\"...\"]}),comparison.paper2&&/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"14px\",marginTop:\"5px\"},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Paper 2:\"}),\" \",comparison.paper2.title.substring(0,40),\"...\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setComparison({paper1:null,paper2:null,isVisible:false}),style:{marginTop:\"10px\",padding:\"5px 10px\",fontSize:\"12px\",backgroundColor:\"#f44336\",color:\"white\",border:\"none\",borderRadius:\"4px\",cursor:\"pointer\"},children:\"Clear\"})]})]})}),/*#__PURE__*/_jsx(PaperComparison,{paper1:comparison.paper1,paper2:comparison.paper2,isVisible:comparison.isVisible,onClose:()=>setComparison(prev=>_objectSpread(_objectSpread({},prev),{},{isVisible:false}))})]});};export default GraphPage;","map":{"version":3,"names":["React","useState","useCallback","useMemo","useNavigate","GraphVisualization","FilterPanel","PaperDetails","PaperComparison","jsx","_jsx","jsxs","_jsxs","mockPapers","id","title","authors","year","abstract","venue","arxivId","citations","beatsRelations","cluster","confidence","summary","metrics","targetPaperId","metric","description","GraphPage","navigate","filters","setFilters","yearRange","minConfidence","clusters","searchQuery","showCitations","showBeatsRelations","graphState","setGraphState","nodes","edges","selectedNode","hoveredNode","comparison","setComparison","paper1","paper2","isVisible","filteredPapers","filter","paper","length","includes","toLowerCase","some","author","map","label","substring","data","forEach","citationId","find","p","push","concat","source","target","type","relation","useEffect","prev","_objectSpread","handleNodeSelect","nodeId","handleNodeHover","selectedPaper","handleCompare","availableClusters","Array","from","Set","Boolean","style","display","height","fontFamily","overflow","children","width","minWidth","maxWidth","borderRight","flexShrink","onFiltersChange","flex","flexDirection","padding","borderBottom","justifyContent","alignItems","margin","fontSize","color","onClick","backgroundColor","border","borderRadius","cursor","minHeight","onNodeSelect","onNodeHover","borderLeft","onCompare","marginTop","onClose"],"sources":["/Users/arjuncaputo/hackmit25/frontend/src/pages/GraphPage.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport GraphVisualization from \"../components/Graph/GraphVisualization\";\nimport FilterPanel from \"../components/Filters/FilterPanel\";\nimport PaperDetails from \"../components/PaperDetails/PaperDetails\";\nimport PaperComparison from \"../components/PaperComparison/PaperComparison\";\nimport { \n  Paper, \n  GraphNode, \n  GraphEdge, \n  FilterState, \n  ComparisonState,\n  GraphState \n} from \"../types\";\n\n// Mock data for development\nconst mockPapers: Paper[] = [\n  {\n    id: \"1\",\n    title: \"Attention Is All You Need\",\n    authors: [\"Vaswani et al.\"],\n    year: 2017,\n    abstract: \"The dominant sequence transduction models are based on complex recurrent or convolutional neural networks...\",\n    venue: \"NIPS\",\n    arxivId: \"1706.03762\",\n    citations: [\"2\", \"3\"],\n    beatsRelations: [],\n    cluster: \"NLP\",\n    confidence: 95,\n    summary: \"Introduced the Transformer architecture, revolutionizing NLP.\",\n    metrics: { \"BLEU\": 28.4, \"Perplexity\": 4.2 }\n  },\n  {\n    id: \"2\", \n    title: \"BERT: Pre-training of Deep Bidirectional Transformers\",\n    authors: [\"Devlin et al.\"],\n    year: 2018,\n    abstract: \"We introduce a new language representation model called BERT...\",\n    venue: \"NAACL\",\n    citations: [\"3\"],\n    beatsRelations: [{ targetPaperId: \"1\", metric: \"GLUE Score\", confidence: 85, description: \"Outperforms on most GLUE tasks\" }],\n    cluster: \"NLP\",\n    confidence: 92,\n    summary: \"Bidirectional training of transformers for language understanding.\",\n  },\n  {\n    id: \"3\",\n    title: \"GPT-3: Language Models are Few-Shot Learners\",\n    authors: [\"Brown et al.\"],\n    year: 2020,\n    abstract: \"Recent work has demonstrated substantial gains on many NLP tasks...\",\n    venue: \"NeurIPS\",\n    citations: [],\n    beatsRelations: [\n      { targetPaperId: \"1\", metric: \"Few-shot Performance\", confidence: 88, description: \"Superior few-shot capabilities\" },\n      { targetPaperId: \"2\", metric: \"Zero-shot Performance\", confidence: 79, description: \"Better zero-shot performance on many tasks\" }\n    ],\n    cluster: \"NLP\",\n    confidence: 89,\n    summary: \"Large-scale language model demonstrating emergent few-shot learning abilities.\",\n  }\n];\n\nconst GraphPage: React.FC = () => {\n  const navigate = useNavigate();\n  \n  const [filters, setFilters] = useState<FilterState>({\n    yearRange: [2015, 2024],\n    minConfidence: 0,\n    clusters: [],\n    searchQuery: \"\",\n    showCitations: true,\n    showBeatsRelations: true,\n  });\n\n  const [graphState, setGraphState] = useState<GraphState>({\n    nodes: [],\n    edges: [],\n    selectedNode: null,\n    hoveredNode: null,\n  });\n\n  const [comparison, setComparison] = useState<ComparisonState>({\n    paper1: null,\n    paper2: null,\n    isVisible: false,\n  });\n\n  // Filter papers based on current filters\n  const filteredPapers = useMemo(() => {\n    return mockPapers.filter(paper => {\n      // Year filter\n      if (paper.year < filters.yearRange[0] || paper.year > filters.yearRange[1]) {\n        return false;\n      }\n      \n      // Confidence filter\n      if (paper.confidence < filters.minConfidence) {\n        return false;\n      }\n      \n      // Cluster filter\n      if (filters.clusters.length > 0 && !filters.clusters.includes(paper.cluster || \"\")) {\n        return false;\n      }\n      \n      // Search query filter\n      if (filters.searchQuery && !paper.title.toLowerCase().includes(filters.searchQuery.toLowerCase()) &&\n          !paper.authors.some(author => author.toLowerCase().includes(filters.searchQuery.toLowerCase()))) {\n        return false;\n      }\n      \n      return true;\n    });\n  }, [filters]);\n\n  // Generate graph data from filtered papers\n  const { nodes, edges } = useMemo(() => {\n    const nodes: GraphNode[] = filteredPapers.map(paper => ({\n      id: paper.id,\n      label: paper.title.substring(0, 50) + \"...\",\n      data: paper,\n    }));\n\n    const edges: GraphEdge[] = [];\n    \n    filteredPapers.forEach(paper => {\n      // Citation edges\n      if (filters.showCitations) {\n        paper.citations.forEach(citationId => {\n          if (filteredPapers.find(p => p.id === citationId)) {\n            edges.push({\n              id: `citation-${paper.id}-${citationId}`,\n              source: citationId,\n              target: paper.id,\n              type: \"citation\",\n              data: {},\n            });\n          }\n        });\n      }\n      \n      // Beats relation edges\n      if (filters.showBeatsRelations) {\n        paper.beatsRelations.forEach(relation => {\n          if (filteredPapers.find(p => p.id === relation.targetPaperId)) {\n            edges.push({\n              id: `beats-${paper.id}-${relation.targetPaperId}`,\n              source: paper.id,\n              target: relation.targetPaperId,\n              type: \"beats\",\n              data: {\n                confidence: relation.confidence,\n                metric: relation.metric,\n                description: relation.description,\n              },\n            });\n          }\n        });\n      }\n    });\n\n    return { nodes, edges };\n  }, [filteredPapers, filters.showCitations, filters.showBeatsRelations]);\n\n  // Update graph state when nodes/edges change\n  React.useEffect(() => {\n    setGraphState(prev => ({ ...prev, nodes, edges }));\n  }, [nodes, edges]);\n\n  const handleNodeSelect = useCallback((nodeId: string) => {\n    setGraphState(prev => ({ ...prev, selectedNode: nodeId }));\n  }, []);\n\n  const handleNodeHover = useCallback((nodeId: string | null) => {\n    setGraphState(prev => ({ ...prev, hoveredNode: nodeId }));\n  }, []);\n\n  const selectedPaper = graphState.selectedNode \n    ? mockPapers.find(p => p.id === graphState.selectedNode) || null\n    : null;\n\n  const handleCompare = (paper: Paper) => {\n    if (!comparison.paper1) {\n      setComparison(prev => ({ ...prev, paper1: paper }));\n    } else if (!comparison.paper2) {\n      setComparison(prev => ({ ...prev, paper2: paper, isVisible: true }));\n    } else {\n      setComparison({ paper1: paper, paper2: null, isVisible: false });\n    }\n  };\n\n  const availableClusters = Array.from(new Set(mockPapers.map(p => p.cluster).filter(Boolean))) as string[];\n\n  return (\n    <div style={{ \n      display: \"flex\", \n      height: \"100vh\", \n      fontFamily: \"Arial, sans-serif\",\n      overflow: \"hidden\"\n    }}>\n      {/* Left sidebar - Filters */}\n      <div style={{ \n        width: \"300px\", \n        minWidth: \"300px\",\n        maxWidth: \"300px\",\n        borderRight: \"1px solid #ddd\", \n        overflow: \"auto\",\n        flexShrink: 0\n      }}>\n        <FilterPanel\n          filters={filters}\n          onFiltersChange={setFilters}\n          availableClusters={availableClusters}\n        />\n      </div>\n\n      {/* Main content - Graph */}\n      <div style={{ \n        flex: 1,\n        minWidth: 0,\n        display: \"flex\", \n        flexDirection: \"column\",\n        overflow: \"hidden\"\n      }}>\n        <div style={{ \n          padding: \"20px\", \n          borderBottom: \"1px solid #ddd\",\n          flexShrink: 0,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        }}>\n          <div>\n            <h1 style={{ margin: 0, fontSize: \"24px\", color: \"#333\" }}>RefGraph</h1>\n            <p style={{ margin: \"5px 0 0 0\", color: \"#666\" }}>\n              Research Paper Visualization Tool - Showing {filteredPapers.length} papers\n            </p>\n          </div>\n          <button\n            onClick={() => navigate(\"/\")}\n            style={{\n              padding: \"10px 20px\",\n              backgroundColor: \"#f5f5f5\",\n              border: \"1px solid #ddd\",\n              borderRadius: \"6px\",\n              cursor: \"pointer\",\n              fontSize: \"14px\",\n              color: \"#333\",\n            }}\n          >\n            ← Back to Home\n          </button>\n        </div>\n        \n        <div style={{ \n          flex: 1, \n          padding: \"20px\",\n          overflow: \"hidden\",\n          minHeight: 0\n        }}>\n          <GraphVisualization\n            nodes={nodes}\n            edges={edges}\n            onNodeSelect={handleNodeSelect}\n            onNodeHover={handleNodeHover}\n          />\n        </div>\n      </div>\n\n      {/* Right sidebar - Paper details */}\n      <div style={{ \n        width: \"400px\", \n        minWidth: \"400px\",\n        maxWidth: \"400px\",\n        borderLeft: \"1px solid #ddd\", \n        overflow: \"auto\",\n        flexShrink: 0\n      }}>\n        <div style={{ padding: \"20px\" }}>\n          <PaperDetails paper={selectedPaper} onCompare={handleCompare} />\n          \n          {comparison.paper1 && (\n            <div style={{ marginTop: \"20px\", padding: \"15px\", backgroundColor: \"#e3f2fd\", borderRadius: \"8px\" }}>\n              <h4 style={{ margin: \"0 0 10px 0\" }}>Comparison Queue:</h4>\n              <div style={{ fontSize: \"14px\" }}>\n                <strong>Paper 1:</strong> {comparison.paper1.title.substring(0, 40)}...\n              </div>\n              {comparison.paper2 && (\n                <div style={{ fontSize: \"14px\", marginTop: \"5px\" }}>\n                  <strong>Paper 2:</strong> {comparison.paper2.title.substring(0, 40)}...\n                </div>\n              )}\n              <button\n                onClick={() => setComparison({ paper1: null, paper2: null, isVisible: false })}\n                style={{\n                  marginTop: \"10px\",\n                  padding: \"5px 10px\",\n                  fontSize: \"12px\",\n                  backgroundColor: \"#f44336\",\n                  color: \"white\",\n                  border: \"none\",\n                  borderRadius: \"4px\",\n                  cursor: \"pointer\",\n                }}\n              >\n                Clear\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Comparison Modal */}\n      <PaperComparison\n        paper1={comparison.paper1}\n        paper2={comparison.paper2}\n        isVisible={comparison.isVisible}\n        onClose={() => setComparison(prev => ({ ...prev, isVisible: false }))}\n      />\n    </div>\n  );\n};\n\nexport default GraphPage;\n"],"mappings":"0HAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,WAAW,CAAEC,OAAO,KAAQ,OAAO,CAC7D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,kBAAkB,KAAM,wCAAwC,CACvE,MAAO,CAAAC,WAAW,KAAM,mCAAmC,CAC3D,MAAO,CAAAC,YAAY,KAAM,yCAAyC,CAClE,MAAO,CAAAC,eAAe,KAAM,+CAA+C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAU5E;AACA,KAAM,CAAAC,UAAmB,CAAG,CAC1B,CACEC,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,2BAA2B,CAClCC,OAAO,CAAE,CAAC,gBAAgB,CAAC,CAC3BC,IAAI,CAAE,IAAI,CACVC,QAAQ,CAAE,8GAA8G,CACxHC,KAAK,CAAE,MAAM,CACbC,OAAO,CAAE,YAAY,CACrBC,SAAS,CAAE,CAAC,GAAG,CAAE,GAAG,CAAC,CACrBC,cAAc,CAAE,EAAE,CAClBC,OAAO,CAAE,KAAK,CACdC,UAAU,CAAE,EAAE,CACdC,OAAO,CAAE,+DAA+D,CACxEC,OAAO,CAAE,CAAE,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAI,CAC7C,CAAC,CACD,CACEZ,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,uDAAuD,CAC9DC,OAAO,CAAE,CAAC,eAAe,CAAC,CAC1BC,IAAI,CAAE,IAAI,CACVC,QAAQ,CAAE,iEAAiE,CAC3EC,KAAK,CAAE,OAAO,CACdE,SAAS,CAAE,CAAC,GAAG,CAAC,CAChBC,cAAc,CAAE,CAAC,CAAEK,aAAa,CAAE,GAAG,CAAEC,MAAM,CAAE,YAAY,CAAEJ,UAAU,CAAE,EAAE,CAAEK,WAAW,CAAE,gCAAiC,CAAC,CAAC,CAC7HN,OAAO,CAAE,KAAK,CACdC,UAAU,CAAE,EAAE,CACdC,OAAO,CAAE,oEACX,CAAC,CACD,CACEX,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,8CAA8C,CACrDC,OAAO,CAAE,CAAC,cAAc,CAAC,CACzBC,IAAI,CAAE,IAAI,CACVC,QAAQ,CAAE,qEAAqE,CAC/EC,KAAK,CAAE,SAAS,CAChBE,SAAS,CAAE,EAAE,CACbC,cAAc,CAAE,CACd,CAAEK,aAAa,CAAE,GAAG,CAAEC,MAAM,CAAE,sBAAsB,CAAEJ,UAAU,CAAE,EAAE,CAAEK,WAAW,CAAE,gCAAiC,CAAC,CACrH,CAAEF,aAAa,CAAE,GAAG,CAAEC,MAAM,CAAE,uBAAuB,CAAEJ,UAAU,CAAE,EAAE,CAAEK,WAAW,CAAE,4CAA6C,CAAC,CACnI,CACDN,OAAO,CAAE,KAAK,CACdC,UAAU,CAAE,EAAE,CACdC,OAAO,CAAE,gFACX,CAAC,CACF,CAED,KAAM,CAAAK,SAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,QAAQ,CAAG3B,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAC4B,OAAO,CAAEC,UAAU,CAAC,CAAGhC,QAAQ,CAAc,CAClDiC,SAAS,CAAE,CAAC,IAAI,CAAE,IAAI,CAAC,CACvBC,aAAa,CAAE,CAAC,CAChBC,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,EAAE,CACfC,aAAa,CAAE,IAAI,CACnBC,kBAAkB,CAAE,IACtB,CAAC,CAAC,CAEF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGxC,QAAQ,CAAa,CACvDyC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,EAAE,CACTC,YAAY,CAAE,IAAI,CAClBC,WAAW,CAAE,IACf,CAAC,CAAC,CAEF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG9C,QAAQ,CAAkB,CAC5D+C,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,IAAI,CACZC,SAAS,CAAE,KACb,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,cAAc,CAAGhD,OAAO,CAAC,IAAM,CACnC,MAAO,CAAAU,UAAU,CAACuC,MAAM,CAACC,KAAK,EAAI,CAChC;AACA,GAAIA,KAAK,CAACpC,IAAI,CAAGe,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC,EAAImB,KAAK,CAACpC,IAAI,CAAGe,OAAO,CAACE,SAAS,CAAC,CAAC,CAAC,CAAE,CAC1E,MAAO,MAAK,CACd,CAEA;AACA,GAAImB,KAAK,CAAC7B,UAAU,CAAGQ,OAAO,CAACG,aAAa,CAAE,CAC5C,MAAO,MAAK,CACd,CAEA;AACA,GAAIH,OAAO,CAACI,QAAQ,CAACkB,MAAM,CAAG,CAAC,EAAI,CAACtB,OAAO,CAACI,QAAQ,CAACmB,QAAQ,CAACF,KAAK,CAAC9B,OAAO,EAAI,EAAE,CAAC,CAAE,CAClF,MAAO,MAAK,CACd,CAEA;AACA,GAAIS,OAAO,CAACK,WAAW,EAAI,CAACgB,KAAK,CAACtC,KAAK,CAACyC,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACvB,OAAO,CAACK,WAAW,CAACmB,WAAW,CAAC,CAAC,CAAC,EAC7F,CAACH,KAAK,CAACrC,OAAO,CAACyC,IAAI,CAACC,MAAM,EAAIA,MAAM,CAACF,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACvB,OAAO,CAACK,WAAW,CAACmB,WAAW,CAAC,CAAC,CAAC,CAAC,CAAE,CACnG,MAAO,MAAK,CACd,CAEA,MAAO,KAAI,CACb,CAAC,CAAC,CACJ,CAAC,CAAE,CAACxB,OAAO,CAAC,CAAC,CAEb;AACA,KAAM,CAAEU,KAAK,CAAEC,KAAM,CAAC,CAAGxC,OAAO,CAAC,IAAM,CACrC,KAAM,CAAAuC,KAAkB,CAAGS,cAAc,CAACQ,GAAG,CAACN,KAAK,GAAK,CACtDvC,EAAE,CAAEuC,KAAK,CAACvC,EAAE,CACZ8C,KAAK,CAAEP,KAAK,CAACtC,KAAK,CAAC8C,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,KAAK,CAC3CC,IAAI,CAAET,KACR,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAV,KAAkB,CAAG,EAAE,CAE7BQ,cAAc,CAACY,OAAO,CAACV,KAAK,EAAI,CAC9B;AACA,GAAIrB,OAAO,CAACM,aAAa,CAAE,CACzBe,KAAK,CAAChC,SAAS,CAAC0C,OAAO,CAACC,UAAU,EAAI,CACpC,GAAIb,cAAc,CAACc,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACpD,EAAE,GAAKkD,UAAU,CAAC,CAAE,CACjDrB,KAAK,CAACwB,IAAI,CAAC,CACTrD,EAAE,aAAAsD,MAAA,CAAcf,KAAK,CAACvC,EAAE,MAAAsD,MAAA,CAAIJ,UAAU,CAAE,CACxCK,MAAM,CAAEL,UAAU,CAClBM,MAAM,CAAEjB,KAAK,CAACvC,EAAE,CAChByD,IAAI,CAAE,UAAU,CAChBT,IAAI,CAAE,CAAC,CACT,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAEA;AACA,GAAI9B,OAAO,CAACO,kBAAkB,CAAE,CAC9Bc,KAAK,CAAC/B,cAAc,CAACyC,OAAO,CAACS,QAAQ,EAAI,CACvC,GAAIrB,cAAc,CAACc,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACpD,EAAE,GAAK0D,QAAQ,CAAC7C,aAAa,CAAC,CAAE,CAC7DgB,KAAK,CAACwB,IAAI,CAAC,CACTrD,EAAE,UAAAsD,MAAA,CAAWf,KAAK,CAACvC,EAAE,MAAAsD,MAAA,CAAII,QAAQ,CAAC7C,aAAa,CAAE,CACjD0C,MAAM,CAAEhB,KAAK,CAACvC,EAAE,CAChBwD,MAAM,CAAEE,QAAQ,CAAC7C,aAAa,CAC9B4C,IAAI,CAAE,OAAO,CACbT,IAAI,CAAE,CACJtC,UAAU,CAAEgD,QAAQ,CAAChD,UAAU,CAC/BI,MAAM,CAAE4C,QAAQ,CAAC5C,MAAM,CACvBC,WAAW,CAAE2C,QAAQ,CAAC3C,WACxB,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,MAAO,CAAEa,KAAK,CAAEC,KAAM,CAAC,CACzB,CAAC,CAAE,CAACQ,cAAc,CAAEnB,OAAO,CAACM,aAAa,CAAEN,OAAO,CAACO,kBAAkB,CAAC,CAAC,CAEvE;AACAvC,KAAK,CAACyE,SAAS,CAAC,IAAM,CACpBhC,aAAa,CAACiC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEhC,KAAK,CAAEC,KAAK,EAAG,CAAC,CACpD,CAAC,CAAE,CAACD,KAAK,CAAEC,KAAK,CAAC,CAAC,CAElB,KAAM,CAAAiC,gBAAgB,CAAG1E,WAAW,CAAE2E,MAAc,EAAK,CACvDpC,aAAa,CAACiC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE9B,YAAY,CAAEiC,MAAM,EAAG,CAAC,CAC5D,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,eAAe,CAAG5E,WAAW,CAAE2E,MAAqB,EAAK,CAC7DpC,aAAa,CAACiC,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE7B,WAAW,CAAEgC,MAAM,EAAG,CAAC,CAC3D,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,aAAa,CAAGvC,UAAU,CAACI,YAAY,CACzC/B,UAAU,CAACoD,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACpD,EAAE,GAAK0B,UAAU,CAACI,YAAY,CAAC,EAAI,IAAI,CAC9D,IAAI,CAER,KAAM,CAAAoC,aAAa,CAAI3B,KAAY,EAAK,CACtC,GAAI,CAACP,UAAU,CAACE,MAAM,CAAE,CACtBD,aAAa,CAAC2B,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAE1B,MAAM,CAAEK,KAAK,EAAG,CAAC,CACrD,CAAC,IAAM,IAAI,CAACP,UAAU,CAACG,MAAM,CAAE,CAC7BF,aAAa,CAAC2B,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAEzB,MAAM,CAAEI,KAAK,CAAEH,SAAS,CAAE,IAAI,EAAG,CAAC,CACtE,CAAC,IAAM,CACLH,aAAa,CAAC,CAAEC,MAAM,CAAEK,KAAK,CAAEJ,MAAM,CAAE,IAAI,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAC,CAClE,CACF,CAAC,CAED,KAAM,CAAA+B,iBAAiB,CAAGC,KAAK,CAACC,IAAI,CAAC,GAAI,CAAAC,GAAG,CAACvE,UAAU,CAAC8C,GAAG,CAACO,CAAC,EAAIA,CAAC,CAAC3C,OAAO,CAAC,CAAC6B,MAAM,CAACiC,OAAO,CAAC,CAAC,CAAa,CAEzG,mBACEzE,KAAA,QAAK0E,KAAK,CAAE,CACVC,OAAO,CAAE,MAAM,CACfC,MAAM,CAAE,OAAO,CACfC,UAAU,CAAE,mBAAmB,CAC/BC,QAAQ,CAAE,QACZ,CAAE,CAAAC,QAAA,eAEAjF,IAAA,QAAK4E,KAAK,CAAE,CACVM,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,OAAO,CACjBC,QAAQ,CAAE,OAAO,CACjBC,WAAW,CAAE,gBAAgB,CAC7BL,QAAQ,CAAE,MAAM,CAChBM,UAAU,CAAE,CACd,CAAE,CAAAL,QAAA,cACAjF,IAAA,CAACJ,WAAW,EACV0B,OAAO,CAAEA,OAAQ,CACjBiE,eAAe,CAAEhE,UAAW,CAC5BgD,iBAAiB,CAAEA,iBAAkB,CACtC,CAAC,CACC,CAAC,cAGNrE,KAAA,QAAK0E,KAAK,CAAE,CACVY,IAAI,CAAE,CAAC,CACPL,QAAQ,CAAE,CAAC,CACXN,OAAO,CAAE,MAAM,CACfY,aAAa,CAAE,QAAQ,CACvBT,QAAQ,CAAE,QACZ,CAAE,CAAAC,QAAA,eACA/E,KAAA,QAAK0E,KAAK,CAAE,CACVc,OAAO,CAAE,MAAM,CACfC,YAAY,CAAE,gBAAgB,CAC9BL,UAAU,CAAE,CAAC,CACbT,OAAO,CAAE,MAAM,CACfe,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QACd,CAAE,CAAAZ,QAAA,eACA/E,KAAA,QAAA+E,QAAA,eACEjF,IAAA,OAAI4E,KAAK,CAAE,CAAEkB,MAAM,CAAE,CAAC,CAAEC,QAAQ,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAf,QAAA,CAAC,UAAQ,CAAI,CAAC,cACxE/E,KAAA,MAAG0E,KAAK,CAAE,CAAEkB,MAAM,CAAE,WAAW,CAAEE,KAAK,CAAE,MAAO,CAAE,CAAAf,QAAA,EAAC,8CACJ,CAACxC,cAAc,CAACG,MAAM,CAAC,SACrE,EAAG,CAAC,EACD,CAAC,cACN5C,IAAA,WACEiG,OAAO,CAAEA,CAAA,GAAM5E,QAAQ,CAAC,GAAG,CAAE,CAC7BuD,KAAK,CAAE,CACLc,OAAO,CAAE,WAAW,CACpBQ,eAAe,CAAE,SAAS,CAC1BC,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SAAS,CACjBN,QAAQ,CAAE,MAAM,CAChBC,KAAK,CAAE,MACT,CAAE,CAAAf,QAAA,CACH,qBAED,CAAQ,CAAC,EACN,CAAC,cAENjF,IAAA,QAAK4E,KAAK,CAAE,CACVY,IAAI,CAAE,CAAC,CACPE,OAAO,CAAE,MAAM,CACfV,QAAQ,CAAE,QAAQ,CAClBsB,SAAS,CAAE,CACb,CAAE,CAAArB,QAAA,cACAjF,IAAA,CAACL,kBAAkB,EACjBqC,KAAK,CAAEA,KAAM,CACbC,KAAK,CAAEA,KAAM,CACbsE,YAAY,CAAErC,gBAAiB,CAC/BsC,WAAW,CAAEpC,eAAgB,CAC9B,CAAC,CACC,CAAC,EACH,CAAC,cAGNpE,IAAA,QAAK4E,KAAK,CAAE,CACVM,KAAK,CAAE,OAAO,CACdC,QAAQ,CAAE,OAAO,CACjBC,QAAQ,CAAE,OAAO,CACjBqB,UAAU,CAAE,gBAAgB,CAC5BzB,QAAQ,CAAE,MAAM,CAChBM,UAAU,CAAE,CACd,CAAE,CAAAL,QAAA,cACA/E,KAAA,QAAK0E,KAAK,CAAE,CAAEc,OAAO,CAAE,MAAO,CAAE,CAAAT,QAAA,eAC9BjF,IAAA,CAACH,YAAY,EAAC8C,KAAK,CAAE0B,aAAc,CAACqC,SAAS,CAAEpC,aAAc,CAAE,CAAC,CAE/DlC,UAAU,CAACE,MAAM,eAChBpC,KAAA,QAAK0E,KAAK,CAAE,CAAE+B,SAAS,CAAE,MAAM,CAAEjB,OAAO,CAAE,MAAM,CAAEQ,eAAe,CAAE,SAAS,CAAEE,YAAY,CAAE,KAAM,CAAE,CAAAnB,QAAA,eAClGjF,IAAA,OAAI4E,KAAK,CAAE,CAAEkB,MAAM,CAAE,YAAa,CAAE,CAAAb,QAAA,CAAC,mBAAiB,CAAI,CAAC,cAC3D/E,KAAA,QAAK0E,KAAK,CAAE,CAAEmB,QAAQ,CAAE,MAAO,CAAE,CAAAd,QAAA,eAC/BjF,IAAA,WAAAiF,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC7C,UAAU,CAACE,MAAM,CAACjC,KAAK,CAAC8C,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,KACtE,EAAK,CAAC,CACLf,UAAU,CAACG,MAAM,eAChBrC,KAAA,QAAK0E,KAAK,CAAE,CAAEmB,QAAQ,CAAE,MAAM,CAAEY,SAAS,CAAE,KAAM,CAAE,CAAA1B,QAAA,eACjDjF,IAAA,WAAAiF,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAC7C,UAAU,CAACG,MAAM,CAAClC,KAAK,CAAC8C,SAAS,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,KACtE,EAAK,CACN,cACDnD,IAAA,WACEiG,OAAO,CAAEA,CAAA,GAAM5D,aAAa,CAAC,CAAEC,MAAM,CAAE,IAAI,CAAEC,MAAM,CAAE,IAAI,CAAEC,SAAS,CAAE,KAAM,CAAC,CAAE,CAC/EoC,KAAK,CAAE,CACL+B,SAAS,CAAE,MAAM,CACjBjB,OAAO,CAAE,UAAU,CACnBK,QAAQ,CAAE,MAAM,CAChBG,eAAe,CAAE,SAAS,CAC1BF,KAAK,CAAE,OAAO,CACdG,MAAM,CAAE,MAAM,CACdC,YAAY,CAAE,KAAK,CACnBC,MAAM,CAAE,SACV,CAAE,CAAApB,QAAA,CACH,OAED,CAAQ,CAAC,EACN,CACN,EACE,CAAC,CACH,CAAC,cAGNjF,IAAA,CAACF,eAAe,EACdwC,MAAM,CAAEF,UAAU,CAACE,MAAO,CAC1BC,MAAM,CAAEH,UAAU,CAACG,MAAO,CAC1BC,SAAS,CAAEJ,UAAU,CAACI,SAAU,CAChCoE,OAAO,CAAEA,CAAA,GAAMvE,aAAa,CAAC2B,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAUD,IAAI,MAAExB,SAAS,CAAE,KAAK,EAAG,CAAE,CACvE,CAAC,EACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}